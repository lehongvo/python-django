services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ecommercedb
      POSTGRES_USER: ecommerceuser
      POSTGRES_PASSWORD: ecommercepass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5222:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecommerceuser"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8001:8000"
    environment:
      - DEBUG=1
      - SECRET_KEY=django-insecure-ecommerce-key
      - DB_HOST=db
      - DB_NAME=ecommercedb
      - DB_USER=ecommerceuser
      - DB_PASSWORD=ecommercepass
      - DB_PORT=5432
      # Email SMTP (set real secrets before running)
      - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=1
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DEFAULT_FROM_EMAIL=TechStore <vincentdev924@gmail.com>
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FACEBOOK_APP_ID=${FACEBOOK_APP_ID}
      - FACEBOOK_APP_SECRET=${FACEBOOK_APP_SECRET}
    depends_on:
      db:
        condition: service_healthy
    stdin_open: true
    tty: true
    restart: unless-stopped

volumes:
  postgres_data:

